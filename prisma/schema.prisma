generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Department {
  id        String               @id @db.Char(4) @map("dept_no")
  name      String               @unique(map: "dept_name") @db.VarChar(40) @map("dept_name")
  employees DepartmentEmployee[]
  managers  DepartmentManager[]

  @@map("departments")
}

model DepartmentEmployee {
  employeeId   Int        @map("emp_no")
  departmentId String     @db.Char(4) @map("dept_no")
  fromDate     DateTime   @db.Date @map("from_date")
  toDate       DateTime   @db.Date @map("to_date")
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dept_emp_ibfk_2")
  employee     Employee   @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dept_emp_ibfk_1")

  @@id([employeeId, departmentId])
  @@index([departmentId], map: "dept_no")
  @@map("dept_emp")
}

model DepartmentManager {
  employeeId   Int        @map("emp_no")
  departmentId String     @db.Char(4) @map("dept_no")
  fromDate     DateTime   @db.Date @map("from_date")
  toDate       DateTime   @db.Date @map("to_date")
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dept_manager_ibfk_2")
  employee     Employee   @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dept_manager_ibfk_1")

  @@id([employeeId, departmentId])
  @@index([departmentId], map: "dept_no")
  @@map("dept_manager")
}

model Employee {
  id           Int                  @id @map("emp_no")
  birthDate    DateTime             @db.Date @map("birth_date")
  firstName    String               @db.VarChar(14) @map("first_name")
  lastName     String               @db.VarChar(16) @map("last_name")
  gender       EmployeeGender
  hireDate     DateTime             @db.Date @map("hire_date")
  departments  DepartmentEmployee[]
  managers     DepartmentManager[]
  salaries     Salarie[]
  titles       Title[]

  @@map("employees")
}

model Salarie {
  employeeId Int      @map("emp_no")
  salary     Int
  fromDate   DateTime @db.Date @map("from_date")
  toDate     DateTime @db.Date @map("to_date")
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "salaries_ibfk_1")

  @@id([employeeId, fromDate])
  @@map("salaries")
}

model Title {
  employeeId Int       @map("emp_no")
  title      String    @db.VarChar(50)
  fromDate   DateTime  @db.Date @map("from_date")
  toDate     DateTime? @db.Date @map("to_date")
  employee   Employee  @relation(fields: [employeeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "titles_ibfk_1")

  @@id([employeeId, title, fromDate])
  @@map("titles")
}

enum EmployeeGender {
  M
  F
}
